Name,Displayed As,Symbol,Description,Stacks?,Remove at End Turn?,Remove at Start Turn?,Invisible?,Blocked by Reduce?,Script: When inflicted,Script: On any status infliction,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: After Combat,Script: On damage inflicted,Script: On damage taken,Script: On status remove
ncr_error,Error,ncr_error,At the start of your turn[;] a random item errors out[;]|rendering it unusable for that turn.,YES,YES,NO,NO,YES,if(self.dicepool.length > 0) { var erroramt = inflicted_value; var erroreq = []; var optimalerroreq = []; if(self.equipment.length > 0) { for(eq in self.equipment) { if(eq.hastag(~errorimmune~) == false && eq.skillcard == ~~ && eq.isready()) { erroreq.push(eq); optimalerroreq.push(eq); /*don't avoid erroring shocked equipment if error inflicted midturn*/ } } while(erroramt > 0) { var pickedeq = null; if(optimalerroreq.length > 0) pickedeq = rand(optimalerroreq); else pickedeq = rand(erroreq); pickedeq.removedice(); roboterror(self|[pickedeq]); optimalerroreq.remove(pickedeq); erroreq.remove(pickedeq); if(erroreq.length < 1) break; erroramt--; } if (self.layout == ~DECK~) { Deck.advance(0.8); } } },,,var erroramt = status.value; var erroreq = []; var optimalerroreq = []; if(self.equipment.length > 0) { for(eq in self.equipment) { if(eq.hastag(~errorimmune~) == false && eq.skillcard == ~~ && eq.isready()) { erroreq.push(eq); if(!eq.weakened && eq.shockedsetting == 0) optimalerroreq.push(eq); } } while(erroramt > 0) { var pickedeq = null; if(optimalerroreq.length > 0) pickedeq = rand(optimalerroreq); else pickedeq = rand(erroreq); pickedeq.removedice(); roboterror(self|[pickedeq]); optimalerroreq.remove(pickedeq); erroreq.remove(pickedeq); if(erroreq.length < 1) break; erroramt--; } if (self.layout == ~DECK~) { Deck.advance(0.8); } },,,,,,,
tickets,Tickets,ticket,you've sold [ticket]<value>_billion tickets. good job,YES,NO,NO,NO,NO,,,,,,,,,,,
mail,Mails,mail,Add [mail]<value> of a random status before start of the turn.|([mail] disappears after applying),YES,NO,NO,NO,YES,,,runscript(~catchmodxd/inflictrandomstatus~|[self|status.value|0|inflictself]);status.cleanup = true;,,,,,,,,
fade,Fade,vanish,Duplicate dice are immediately destroyed.|Disappears when triggered.,YES,YES,NO,NO,YES,,,,,,,,,,,
nudgenextturn,Nudge,nudge,When your turn starts[;]|decrease the value of <value> dice.,YES,NO,NO,NO,YES,,,,runscript(~tennis/bumpnextturn~|[self|status.value * -1]); status.removenow();,,,,,,,
returntosender,Return to Sender,returntosender,When the enemy uses a card that casts toward you[;]|inflict [mail]1 mail on them.,NO,NO,YES,NO,NO,,,,,,,,,,,
returntosender_real,Return to Sender (Real),cog,shouldn't appear,NO,NO,NO,YES,NO,,,,,if(target.hasstatus(~returntosender~) && e.castdirection == 1) { inflictself(~mail~); },,,,,,
thiefspaceleft,Space_Left,cog,you can have [cog]<value> more spaces left|of guns not loaded at a time,YES,NO,NO,NO,NO,,,,,,,,,,,
