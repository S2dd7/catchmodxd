Name,Description,Author,Comment,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Tags,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: Before execute,Script: On Snap,Script: On Fury,Script: On Dodge
merge conflicts,inflict [ncr_error]999 error|[gray](once per battle),notmario,balanceditemlike,2,inflict(~ncr_error~|999); sfx(~roboterror~);,,NORMAL,,GRAY,change_power,complicate,,,0,NO,YES,nm,,,,,,,,,,,,
merge conflicts_upgraded,combine dice[;] inflict [ncr_error]999|[gray](once per battle),notmario,spanner incident 76,1,inflict(~ncr_error~|999); sfx(~roboterror~); givedice(d);,,NORMAL|NORMAL,,GRAY,,,,,0,NO,YES,nm,,,,,,,,,,,,givedice(d);
spiked spike,do [sword]3 damage twice,notmario,,2,attack(3); attack(3); sfxdamage(target|6);,,COUNTDOWN,6,RED,change_power,change_power,,,0,NO,NO,nm,,,,,,,,,,,,
spiked spike_upgraded,do [sword]3 damage twice,notmario,,2,attack(3); attack(3); sfxdamage(target|6);,,COUNTDOWN,4,RED,,,,,0,NO,NO,nm,,,,,,,,,,,,
spiked spike_downgraded,do [sword]1 damage twice,notmario,,2,attack(1); attack(1); sfxdamage(target|2);,,COUNTDOWN,6,RED,,,,,0,NO,NO,nm,,,,,,,,,,,,
spiked spike_weakened,do [sword]1 damage twice,notmario,,2,attack(1); attack(1); sfxdamage(target|2);,,COUNTDOWN,4,RED,,,,,0,NO,NO,nm,,,,,,,,,,,,
big shot@catchmod,do [sword]18 damage,notmario,,2,attack(18); sfxdamage(target|18);,,REQUIRE6|REQUIRE6,,RED,increaserange,change_power,,,0,NO,NO,nm,,,,,,,,,,,,
big shot@catchmod_downgraded,do [sword]12 damage,notmario,,2,attack(12); sfxdamage(target|12);,,REQUIRE6|REQUIRE6,,RED,,,,,0,NO,NO,nm,,,,,,,,,,,,
morbin' time@catchmod,do [sword]3 damage|on 6[;] sell [ticket]2B tickets,notmario,more bius,1,attack(3); sfxdamage(target|3); if (d==6) {inflictself(~tickets~|2); sfx(~_mana~);},,NORMAL,,RED,,,,,0,NO,NO,nm,,,,,,,,,,,,if (d==6) {inflictself(~tickets~|2); sfx(~_mana~);}
morbin' time@catchmod_upgraded,do [sword]3 damage|on even[;] sell [ticket]2B tickets,notmario,,1,attack(3); sfxdamage(target|3); if (d%2==0) {inflictself(~tickets~|2); sfx(~_mana~);},,NORMAL,,RED,,,,,0,NO,NO,nm,,,,,,,,,,,,if (d%2==0) {inflictself(~tickets~|2); sfx(~_mana~);}
morbin' time@catchmod_downgraded,do [sword]3 damage,notmario,,1,attack(3); sfxdamage(target|3);,,NORMAL,,RED,,,,,0,NO,NO,nm,,,,,,,,,,,,
box office@catchmod,[sword]1[;] get a new dice|(cost [ticket]1B[]: get two),notmario,,1,if (getstatusself(~tickets~) >= 1) {removestatusself(~tickets~|1); sfx(~_mana~); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); } else {givedice();} attack(1); sfxdamage(target|1);,,NORMAL,,PURPLE,,,,,0,NO,NO,nm,,,,,,,,,,,,if (getstatusself(~tickets~) >= 1) {removestatusself(~tickets~|1); sfx(~_mana~); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); } else {givedice();}
box office@catchmod_upgraded,[sword]1[;] get a new dice|(cost [ticket]1B[]: get two)|,notmario,,1,if (getstatusself(~tickets~) >= 1) {removestatusself(~tickets~|1); sfx(~_mana~); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); } else {givedice();} attack(1); sfxdamage(target|1);,,NORMAL,,PURPLE,,,,,2,NO,NO,nm,,,,,,,,,,,,if (getstatusself(~tickets~) >= 1) {removestatusself(~tickets~|1); sfx(~_mana~); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]); } else {givedice();}
box office@catchmod_downgraded,[sword]1[;] get a new dice,notmario,,1,givedice(); attack(1); sfxdamage(target|1);,,NORMAL,,PURPLE,,,,,0,NO,NO,nm,,,,,,,,,,,,givedice();
Awful Item,Does nothing|[gray](once per battle),dummy,awful mod joke,2,donothing();,,NORMAL,,ORANGE,change_power,complicate,,,0,YES,YES,dummy,,,,,,,,,,,,
Awful Item_upgraded,Does something|(steals [gold]999 from you),dummy,awsome mod joke,2,donothing();self.gold -= 999;if(self.gold < 0) self.gold = 0;,,NORMAL,,ORANGE,change_power,complicate,,,0,YES,NO,dummy,,,,,,,,,,,,
Message,inflict [mail]1 mail,dummy,melodylike. been made for testing. also in case if there will be mail boosterpack,2,inflict(~mail~|1); sfx(~_blind~);,Envelope,NORMAL,,PINK,change_power,complicate,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Message_upgraded,inflict [mail]2 mail,dummy,melodylike. been made for testing. also in case if there will be mail boosterpack,2,inflict(~mail~|2); sfx(~_blind~);,Envelope,NORMAL,,PINK,change_power,complicate,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Mailbox,Do [sword]<d6> damage[;]|on 6[;] inflict [mail]1 mail,dummy,mail hammerlike. hammer replacement,2,attack(d);sfxdamage(target|d);if(d == 6){inflict(~mail~|1); sfx(~_blind~|~~|0.2);},Envelope,NORMAL,,PINK,change_power,change_power,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Mailbox_upgraded,Do [sword]<d6> damage[;]|on 6[;] inflict [mail]2 mail,dummy,mail hammerlike. hammer replacement,2,attack(d);sfxdamage(target|d);if(d == 6){inflict(~mail~|2); sfx(~_blind~|~~|0.2);},Envelope,NORMAL,,PINK,change_power,change_power,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Mailbox_downgraded,Do [sword]<d6> damage,dummy,mail hammerlike. hammer replacement,2,attack(d);sfxdamage(target|d);,Envelope,NORMAL,,PINK,change_power,change_power,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Spam Email,Inflict [mail]1 mail|[gray](Reuseable),dummy,mail leakypipelike. matchstick replacement,1,inflict(~mail~|1); sfx(~_blind~);,Envelope,ODD,,PINK,change_power,change_power,,,3,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Spam Email_upgraded,Inflict [mail]1 mail|[gray](Reuseable),dummy,mail leakypipelike. matchstick replacement,1,inflict(~mail~|1); sfx(~_blind~);,Envelope,ODD,,PINK,change_power,change_power,,,-1,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Message Under 600 Chars,Do [sword]<d6> damage[;]|unless 6[;] inflict [mail]1 mail,dummy,mail shiverlike. idk,1,attack(d);sfxdamage(target|d);if(d != 6){inflict(~mail~|1); sfx(~_blind~|~~|0.2);},Envelope,EVEN,,PINK,simplify,change_power,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Message Under 600 Chars_downgraded,Do [sword]<d6> damage,dummy,mail shiverlike. idk,1,attack(d);sfxdamage(target|d);,Envelope,EVEN,,PINK,simplify,change_power,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Letter Opener,Open all mails[;]|add [mail]x random status,dummy,main card for theoretically possible mail jesterpack. although it sucks so idk,1,if(getstatus(~mail~) <= 0){target.textparticle(~No effect!~);}else{runscript(~catchmodxd/inflictrandomstatus~|[target|getstatus(~mail~)|0|inflict]);removestatus(~mail~|ALL);},Envelope,EVEN,,PINK,simplify,complicate,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Blocked Message,Gain [shield]<d6> shield|Inflict [mail]1 mail,dummy,hi sefcear,1,inflictself(SHIELD|d);sfx(~_shield~);inflict(~mail~|1); sfx(~_blind~);,,MAX3,,PINK,increaserange,decreaserange,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,inflictself(SHIELD|d);sfx(~_shield~);
Last Online: 3 Years Ago,In [jinx]3 turns[;]|inflict [mail]20 mails,dummy,brb *leaves* // could also be called snail mail // nm,2,jinx(e.name + e.namemodifier|~receive [mail]%VAR% mails~|~Receive [mail]%VAR% mails~|~inflict(\~mail\~|%VAR%);sfx(\~_blind\~);~|target|self|3|20); sfx(~_thinghappens~);,Envelope,COUNTDOWN,3,PINK,change_power,change_power,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Last Online: 3 Years Ago_upgraded,In [jinx]3 turns[;]|inflict [mail]25 mails,dummy,brb *leaves*,2,jinx(e.name + e.namemodifier|~receive [mail]%VAR% mails~|~Receive [mail]%VAR% mails~|~inflict(\~mail\~|%VAR%);sfx(\~_blind\~);~|target|self|3|25); sfx(~_thinghappens~);,Envelope,COUNTDOWN,3,PINK,change_power,change_power,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Last Online: 3 Years Ago_downgraded,In [jinx]3 turns[;]|inflict [mail]10 mails,dummy,brb *leaves*,2,jinx(e.name + e.namemodifier|~receive [mail]%VAR% mails~|~Receive [mail]%VAR% mails~|~inflict(\~mail\~|%VAR%);sfx(\~_blind\~);~|target|self|3|10); sfx(~_thinghappens~);,Envelope,COUNTDOWN,3,PINK,change_power,change_power,,,0,NO,NO,dummy|jesterequipment:mail,,,,,,,,,,,,
Combat Roll?,Reroll a dice...|(Resets each turn),dummy,combat roll@jesterreunion,2,,Random Roll,COUNTDOWN,7,GRAY,,,,,0,YES,NO,dummy|excludefromrandomlists|cannotsteal,,,,,,,if(e.dicehistory.length > 0 && (!e.gamevar.exists(~combatcountdown~) # e.dicehistory.length != e.getvar(~combatcountdown~))){givedice();e.setvar(~combatcountdown~|e.dicehistory.length);},e.remainingcountdown = 7;,,,,
Swordphobia,Do [sword]7 damage,dummy,ive borrowed this,2,attack(7);sfxdamage(target|7);sfx(~_metals~);,,COUNTDOWN,9,RED,change_power,change_power,,,0,NO,NO,dummy,,,,,,,,,,,,
Swordphobia_upgraded,Do [sword]9 damage,dummy,ive borrowed this,2,attack(9);sfxdamage(target|9);sfx(~_metals~);,,COUNTDOWN,9,RED,change_power,change_power,,,0,NO,NO,dummy,,,,,,,,,,,,
Swordphobia_downgraded,Do [sword]5 damage,dummy,ive borrowed this,2,attack(5);sfxdamage(target|5);sfx(~_metals~);,,COUNTDOWN,9,RED,change_power,change_power,,,0,NO,NO,dummy,,,,,,,,,,,,
Dial a Song,Do [sword]2 damage[;] inflict|[weaken]Weaken and [mail]Mail,Buster of Wibi,,2,attack(2); sfxdamage(target|2); inflict(WEAKEN); inflict(~mail~); sfx(~_multistatus~);,Dial Up Sounds,EVEN,,ORANGE,reducesize,complicate,,,,,,wibi|jesterequipment:mail,,,,,,,,,,,,
Dial a Song_weakened,Do [sword]2 damage[;] inflict|[weaken]Weaken and [mail]Mail,Buster of Wibi,,2,attack(2); sfxdamage(target|2); inflict(WEAKEN); inflict(~mail~); sfx(~_multistatus~);,Dial Up Sounds,REQUIRE6,,ORANGE,,,,,,,,wibi|jesterequipment:mail,,,,,,,,,,,,
Return to Sender,When the enemy attacks|you[;] inflict [mail]1 mail,Diane of Wibi,,1,inflictself(~returntosender~); inflict(~returntosender_real~); sfx(~_thinghappens~);,Envelope,ODD,,PURPLE,simplify,change_power,,,,YES,,wibi|jesterequipment:mail,,,,,,,,,,,,
Return to Sender_downgraded,Inflict [mail]1 mail,Diane of Wibi,,1,inflict(~mail~|1); sfx(~_blind~);,Envelope,ODD,,PURPLE,,,,,,YES,,wibi|jesterequipment:mail,,,,,,,,,,,,
chain mail,inflict [mail]1 mail[;]|and gain [reduce]1 reduce,notmario,pun's too good to pass up,1,inflict(~mail~|1); sfx(~_blind~); inflictself(REDUCE); sfx(~_shield~);,Envelope,ODD,,PURPLE,simplify,complicate,,,0,NO,NO,nm|jesterequipment:mail,,,,,,,,,,,,inflictself(REDUCE); sfx(~_shield~);
snail mail,inflict [mail]1 next turn|(always offered as scrap),notmario / dummy,name by nm; effect by dummy,1,jinx(e.name + e.namemodifier|~receive [mail]%VAR% mails~|~receive [mail]%VAR% mails~|~inflict(\~mail\~|%VAR%);sfx(\~_blind\~);~|target|self|2|1); sfx(~_thinghappens~);,Envelope,ODD,,GRAY,simplify,complicate,,,,,,nm|dummy|jesterequipment:mail,,,,,,,,,,,,
assault rifle,do [sword]3 damage|[gray](Reuseable)|this has ([funnysymbol][bullet][bullet][bullet][funnysymbol]) shots,notmario,,2,attack(3); sfxdamage(target|3);,,ODD,,RED,simplify,complicate,,,-1,NO,NO,nm|excludefromrandomlists|hidereuseable|ammo:3,,var ammo = -1; for (tag in e.tags) {if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); e.setvar(~totalammo~|ammo);,,,,,,,var ammo = e.getvar(~ammo~); if (ammo == e.getvar(~totalammo~)) {/* reduce spaceleft */ removestatusself(~thiefspaceleft~|e.size); /* disable eqs larger than the amount of space we have left */ var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.getvar(~ammo~) == eq.getvar(~totalammo~) && eq.size > space && eq.availablethisturn) {eq.availablethisturn = false; eq.unavailabletext = ~Unavailable~; eq.unavailabledetails = [~Too much equipment out~]; eq.animate(~flashandshake~); }} } ammo--; if (ammo == 0) {/* give space back */ inflictself(~thiefspaceleft~|e.size); var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.size <= space && !eq.availablethisturn) {eq.availablethisturn = true; eq.animate(~flashandshake~); }} for (tag in e.tags) { if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); } else {e.setvar(~ammo~|ammo);} /* symbolbar */ runscript(~tennis/symbolbar~|[e|~bullet~|~bulletused~|ammo|e.getvar(~totalammo~)]);,,,
trustula,1-3: flip the dice|4-6: split the dice|,notmario,,2,if (d <= 3) {givedice(7-d);} else {givedice(split(d)|~splitdice~);},,NORMAL,,GRAY,,,,,2,YES,NO,nm|skillcard,,,,,,,,,,,,
sidearm,do [sword]2 damage ([funnysymbol][bullet][bullet][funnysymbol])|,notmario,,1,attack(2); sfxdamage(target|2);,Pea Gun,COUNTDOWN,4,YELLOW,change_power,change_power,,,-1,NO,NO,nm|excludefromrandomlists|ammo:2,,var ammo = -1; for (tag in e.tags) {if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); e.setvar(~totalammo~|ammo);,,,,,,,var ammo = e.getvar(~ammo~); if (ammo == e.getvar(~totalammo~)) {/* reduce spaceleft */ removestatusself(~thiefspaceleft~|e.size); /* disable eqs larger than the amount of space we have left */ var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.getvar(~ammo~) == eq.getvar(~totalammo~) && eq.size > space && eq.availablethisturn) {eq.availablethisturn = false; eq.unavailabletext = ~Unavailable~; eq.unavailabledetails = [~Too much equipment out~]; eq.animate(~flashandshake~); }} } ammo--; if (ammo == 0) {/* give space back */ inflictself(~thiefspaceleft~|e.size); var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.size <= space && !eq.availablethisturn) {eq.availablethisturn = true; eq.animate(~flashandshake~); }} for (tag in e.tags) { if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); } else {e.setvar(~ammo~|ammo);} /* symbolbar */ runscript(~tennis/symbolbar~|[e|~bullet~|~bulletused~|ammo|e.getvar(~totalammo~)]);,,,
sidearm_upgraded,do [sword]4 damage ([funnysymbol][bullet][bullet][funnysymbol])|,notmario,,1,attack(4); sfxdamage(target|4);,Pea Gun,COUNTDOWN,4,YELLOW,,,,,-1,NO,NO,nm|excludefromrandomlists|ammo:2,,var ammo = -1; for (tag in e.tags) {if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); e.setvar(~totalammo~|ammo);,,,,,,,var ammo = e.getvar(~ammo~); if (ammo == e.getvar(~totalammo~)) {/* reduce spaceleft */ removestatusself(~thiefspaceleft~|e.size); /* disable eqs larger than the amount of space we have left */ var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.getvar(~ammo~) == eq.getvar(~totalammo~) && eq.size > space && eq.availablethisturn) {eq.availablethisturn = false; eq.unavailabletext = ~Unavailable~; eq.unavailabledetails = [~Too much equipment out~]; eq.animate(~flashandshake~); }} } ammo--; if (ammo == 0) {/* give space back */ inflictself(~thiefspaceleft~|e.size); var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.size <= space && !eq.availablethisturn) {eq.availablethisturn = true; eq.animate(~flashandshake~); }} for (tag in e.tags) { if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); } else {e.setvar(~ammo~|ammo);} /* symbolbar */ runscript(~tennis/symbolbar~|[e|~bullet~|~bulletused~|ammo|e.getvar(~totalammo~)]);,,,
sidearm_downgraded,do [sword]1 damage ([funnysymbol][bullet][bullet][funnysymbol])|,notmario,,1,attack(1); sfxdamage(target|1);,Pea Gun,COUNTDOWN,4,YELLOW,,,,,-1,NO,NO,nm|excludefromrandomlists|ammo:2,,var ammo = -1; for (tag in e.tags) {if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); e.setvar(~totalammo~|ammo);,,,,,,,var ammo = e.getvar(~ammo~); if (ammo == e.getvar(~totalammo~)) {/* reduce spaceleft */ removestatusself(~thiefspaceleft~|e.size); /* disable eqs larger than the amount of space we have left */ var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.getvar(~ammo~) == eq.getvar(~totalammo~) && eq.size > space && eq.availablethisturn) {eq.availablethisturn = false; eq.unavailabletext = ~Unavailable~; eq.unavailabledetails = [~Too much equipment out~]; eq.animate(~flashandshake~); }} } ammo--; if (ammo == 0) {/* give space back */ inflictself(~thiefspaceleft~|e.size); var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.size <= space && !eq.availablethisturn) {eq.availablethisturn = true; eq.animate(~flashandshake~); }} for (tag in e.tags) { if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); } else {e.setvar(~ammo~|ammo);} /* symbolbar */ runscript(~tennis/symbolbar~|[e|~bullet~|~bulletused~|ammo|e.getvar(~totalammo~)]);,,,
super shotgun,do [sword]<d6> damage|([funnysymbol][bullet][bullet][bullet][bullet][bullet][bullet][bullet][bullet][funnysymbol]),notmario,,2,attack(d); sfxdamage(target|d);,Catapult,NORMAL|FREE4,,RED,change_power,change_power,,,0,NO,NO,nm|excludefromrandomlists|ammo:8,,var ammo = -1; for (tag in e.tags) {if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); e.setvar(~totalammo~|ammo);,,,,,,,var ammo = e.getvar(~ammo~); if (ammo == e.getvar(~totalammo~)) {/* reduce spaceleft */ removestatusself(~thiefspaceleft~|e.size); /* disable eqs larger than the amount of space we have left */ var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.getvar(~ammo~) == eq.getvar(~totalammo~) && eq.size > space && eq.availablethisturn) {eq.availablethisturn = false; eq.unavailabletext = ~Unavailable~; eq.unavailabledetails = [~Too much equipment out~]; eq.animate(~flashandshake~); }} } ammo--; if (ammo == 0) {/* give space back */ inflictself(~thiefspaceleft~|e.size); var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.size <= space && !eq.availablethisturn) {eq.availablethisturn = true; eq.animate(~flashandshake~); }} for (tag in e.tags) { if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); } else {e.setvar(~ammo~|ammo);} /* symbolbar */ runscript(~tennis/symbolbar~|[e|~bullet~|~bulletused~|ammo|e.getvar(~totalammo~)]);,,,
super shotgun_upgraded,do [sword]<double> damage|([funnysymbol][bullet][bullet][bullet][bullet][bullet][bullet][bullet][bullet][funnysymbol]),notmario,,2,attack(d*2); sfxdamage(target|d*2);,Catapult,NORMAL,,RED,,,,,0,NO,NO,nm|excludefromrandomlists|ammo:8,,var ammo = -1; for (tag in e.tags) {if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); e.setvar(~totalammo~|ammo);,,,,,,,var ammo = e.getvar(~ammo~); if (ammo == e.getvar(~totalammo~)) {/* reduce spaceleft */ removestatusself(~thiefspaceleft~|e.size); /* disable eqs larger than the amount of space we have left */ var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.getvar(~ammo~) == eq.getvar(~totalammo~) && eq.size > space && eq.availablethisturn) {eq.availablethisturn = false; eq.unavailabletext = ~Unavailable~; eq.unavailabledetails = [~Too much equipment out~]; eq.animate(~flashandshake~); }} } ammo--; if (ammo == 0) {/* give space back */ inflictself(~thiefspaceleft~|e.size); var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.size <= space && !eq.availablethisturn) {eq.availablethisturn = true; eq.animate(~flashandshake~); }} for (tag in e.tags) { if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); } else {e.setvar(~ammo~|ammo);} /* symbolbar */ runscript(~tennis/symbolbar~|[e|~bullet~|~bulletused~|ammo|e.getvar(~totalammo~)]);,,,
super shotgun_downgraded,do [sword]<d6> damage|([funnysymbol][bullet][bullet][bullet][bullet][bullet][bullet][bullet][bullet][funnysymbol]),notmario,,2,attack(d); sfxdamage(target|d);,Catapult,NORMAL|FREE2,,RED,,,,,0,NO,NO,nm|excludefromrandomlists|ammo:8,,var ammo = -1; for (tag in e.tags) {if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); e.setvar(~totalammo~|ammo);,,,,,,,var ammo = e.getvar(~ammo~); if (ammo == e.getvar(~totalammo~)) {/* reduce spaceleft */ removestatusself(~thiefspaceleft~|e.size); /* disable eqs larger than the amount of space we have left */ var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.getvar(~ammo~) == eq.getvar(~totalammo~) && eq.size > space && eq.availablethisturn) {eq.availablethisturn = false; eq.unavailabletext = ~Unavailable~; eq.unavailabledetails = [~Too much equipment out~]; eq.animate(~flashandshake~); }} } ammo--; if (ammo == 0) {/* give space back */ inflictself(~thiefspaceleft~|e.size); var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.size <= space && !eq.availablethisturn) {eq.availablethisturn = true; eq.animate(~flashandshake~); }} for (tag in e.tags) { if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); } else {e.setvar(~ammo~|ammo);} /* symbolbar */ runscript(~tennis/symbolbar~|[e|~bullet~|~bulletused~|ammo|e.getvar(~totalammo~)]);,,,
extra hand,you can have an extra|slot active at a time,notmario,,1,,,,,GREEN,change_power,change_power,,,0,NO,NO,nm|excludefromrandomlists,,inflictself(~thiefspaceleft~);,,,,,,,,,,
extra hand_upgraded,you can have 2 extra|slots active at a time,notmario,,2,,,,,GREEN,,,,,0,NO,NO,nm|excludefromrandomlists,,inflictself(~thiefspaceleft~|2);,,,,,,,,,,
extra hand_downgraded,you can have an extra|slot active at a time,notmario,,1,,,,,GREEN,,,,,0,NO,NO,nm|excludefromrandomlists,,inflictself(~thiefspaceleft~);,,,,,,,,,,
glockpick@catch,[sword]1[;] split the dice ([funnysymbol][bullet][bullet][funnysymbol])|,notmario,,1,attack(1); sfxdamage(target|1); givedice(split(d)|~splitdice~);,,MIN4,,GREEN,,,,,2,NO,NO,nm|excludefromrandomlists|ammo:2,,var ammo = -1; for (tag in e.tags) {if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); e.setvar(~totalammo~|ammo);,,,,,,,var ammo = e.getvar(~ammo~); if (ammo == e.getvar(~totalammo~)) {/* reduce spaceleft */ removestatusself(~thiefspaceleft~|e.size); /* disable eqs larger than the amount of space we have left */ var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.getvar(~ammo~) == eq.getvar(~totalammo~) && eq.size > space && eq.availablethisturn) {eq.availablethisturn = false; eq.unavailabletext = ~Unavailable~; eq.unavailabledetails = [~Too much equipment out~]; eq.animate(~flashandshake~); }} } ammo--; if (ammo == 0) {/* give space back */ inflictself(~thiefspaceleft~|e.size); var space = getstatusself(~thiefspaceleft~); trace(space); for (eq in self.equipment) {if (!eq.hastag(~skillcard~) && eq != e && eq.size <= space && !eq.availablethisturn) {eq.availablethisturn = true; eq.animate(~flashandshake~); }} for (tag in e.tags) { if (tag.indexOf(~ammo:~) != -1) {ammo = (tag.split(~ammo:~)[1]) - 0;}} e.setvar(~ammo~|ammo); } else {e.setvar(~ammo~|ammo);} /* symbolbar */ runscript(~tennis/symbolbar~|[e|~bullet~|~bulletused~|ammo|e.getvar(~totalammo~)]);,,,
Matchn'tstick,Fade [vanish]1 dice|[gray](Reuseable),dummy,new fade theming found: matches. nightstick equivalent.,1,inflict(~fade~|1);sfx(~_vanish~);,Find Two,EVEN,,PINK,simplify,doublerequirements,,,-1,NO,NO,dummy,,,,,,,,,,,,
Matcha Latte,Self inflict [vanish]1 fade|(Always offered as scrap),dummy,"matches" theming continues.,1,,,,,GRAY,change_power,change_power,,,0,NO,NO,dummy|appearsforparts,,,,,inflictself(~fade~);sfx(~_vanish~);e.animate(~flashandshake~);,,,,,,,
Matcha Latte_downgraded,Self inflict [vanish]2 fade|(Always offered as scrap),dummy,"matches" theming continues.,1,,Find Two,,,GRAY,change_power,change_power,,,0,NO,NO,dummy|appearsforparts,,,,,inflictself(~fade~|2);sfx(~_vanish~);e.animate(~flashandshake~);,,,,,,,
Matcha Latte_upgraded,+1 dice when equipped|Self inflict [vanish]1 fade|(Always offered as scrap),dummy,"matches" theming continues.,1,,Find Two,,,GRAY,change_power,change_power,,,0,NO,NO,dummy|appearsforparts,,,,,givedice();inflictself(~fade~);sfx(~_vanish~);e.animate(~flashandshake~);,,,,,,,
Mishmash,Inflict [lock] counter 2[;]|[blind] blind[;] and [ice] freeze,dummy,wacky catastrophelike where statuses contradict each other,1,inflict(BLIND); inflict(ICE); inflict(~counter_2~);sfx(~_multistatus~);,Oh No!,COUNTDOWN,7,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,dummy,1,,,,,,,,,,,
Mishmash_upgraded,Inflict [lock] counter 4[;]|[blind]2 blind[;] and [ice]2 freeze,dummy,wacky catastrophelike where statuses contradict each other,1,inflict(BLIND| 2); inflict(ICE| 2); inflict(~counter_4~);sfx(~_multistatus~);,Oh No!,COUNTDOWN,7,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,dummy,,,,,,,,,,,,
Mishmash_downgraded,Inflict [lock] counter 2[;]|[blind] blind[;] or [ice] freeze,dummy,wacky catastrophelike where statuses contradict each other,1,inflict(rand([BLIND|ICE|~counter_2~]));sfx(~_multistatus~);,Oh No!,COUNTDOWN,7,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,dummy,,,,,,,,,,,,
Garlic Phone,In [jinx]3 turns[;]|take [heart]1 from vampires,dummy,geddit,1,jinx(e.name + e.namemodifier|~takes [heart]1 from vampires~|~-[heart]1 from vampires~|~if(target.hp <= 1 && getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE| ALL); attack(1); } else{ attack(1); target.textparticle(\~No effect!\~); }~|target|self|3|1); sfx(~_thinghappens~);,Heat Ray,COUNTDOWN,3,PURPLE,change_power,change_power,,,0,NO,NO,dummy,,,,,,,,,,,,
Garlic Phone_upgraded,In [jinx]2 turns[;]|take [heart]1 from vampires,dummy,geddit,1,jinx(e.name + e.namemodifier|~takes [heart]1 from vampires~|~-[heart]1 from vampires~|~if(target.hp <= 1 && getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE| ALL); attack(1); } else{ attack(1); target.textparticle(\~No effect!\~); }~|target|self|2|1); sfx(~_thinghappens~);,Heat Ray,COUNTDOWN,3,PURPLE,change_power,change_power,,,0,NO,NO,dummy,,,,,,,,,,,,
Garlic Phone_downgraded,In [jinx]4 turns[;]|take [heart]1 from vampires,dummy,geddit,1,jinx(e.name + e.namemodifier|~takes [heart]1 from vampires~|~-[heart]1 from vampires~|~if(target.hp <= 1 && getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE| ALL); attack(1); } else{ attack(1); target.textparticle(\~No effect!\~); }~|target|self|4|1); sfx(~_thinghappens~);,Heat Ray,COUNTDOWN,3,PURPLE,change_power,change_power,,,0,NO,NO,dummy,,,,,,,,,,,,
Laser Vision,[95%]CHARGES OVER TURNS|Do [sword]6 damage,dummy,epic. i made a brand new slot type.,1,attack(6);sfxdamage(target|6);sfx(~_plasma~);e.assigneddice = [null];,Plasma Gun,NORMAL,,RED,change_power,change_power,,,0,NO,NO,dummy,,,,e.countdown = 1;e.remainingcountdown = 1;if(e.gamevar.exists(~chargedicevalue~)){var mydice = new elements.Dice();mydice.basevalue = e.getvar(~chargedicevalue~);e.resetvar(~chargedicevalue~);self.dicepool.push(mydice);mydice.x = -8888;mydice.blind = e.setvar(~chargediceblind~);e.resetvar(~chargediceblind~);mydice.assigned = e;e.setvar(~chargedice~|mydice);},if(e.gamevar.exists(~chargedice~)){var s = new elements.DiceyScript('if(!e.availablethisturn # e.shockedsetting > 0 # !e.ready # e.namemodifier == ~-~){self.dicepool.remove(e.getvar(~chargedice~));} else {e.assigndice(e.getvar(~chargedice~)|0);e.doequipmentaction(self| target| 1| e.assigneddice| 0| false| false);}e.resetvar(~chargedice~);');s.set(~self~|self);s.set(~target~|target);s.set(~e~|e); var asoboh = new motion.actuators.SimpleActuator(null[;]0.01[;]null);asoboh._repeat = 1; asoboh.onRepeat(s.execute[;][self[;]target]); asoboh.move();},,,if(e.assigneddice[0] != null){e.setvar(~chargedicevalue~|e.assigneddice[0].basevalue);e.setvar(~chargediceblind~|e.assigneddice[0].blind);},,,,
Laser Vision_upgraded,[95%]CHARGES OVER TURNS|Do [sword]6 damage|[gray](Reuseable),dummy,epic. i made a brand new slot type.,1,attack(6);sfxdamage(target|6);sfx(~_plasma~);e.assigneddice = [null];,Plasma Gun,NORMAL,,RED,change_power,change_power,,,-1,NO,NO,dummy,,,,e.countdown = 1;e.remainingcountdown = 1;if(e.gamevar.exists(~chargedicevalue~)){var mydice = new elements.Dice();mydice.basevalue = e.getvar(~chargedicevalue~);e.resetvar(~chargedicevalue~);self.dicepool.push(mydice);mydice.x = -8888;mydice.blind = e.setvar(~chargediceblind~);e.resetvar(~chargediceblind~);mydice.assigned = e;e.setvar(~chargedice~|mydice);},if(e.gamevar.exists(~chargedice~)){var s = new elements.DiceyScript('if(!e.availablethisturn # e.shockedsetting > 0 # !e.ready # e.namemodifier == ~-~){self.dicepool.remove(e.getvar(~chargedice~));} else {e.assigndice(e.getvar(~chargedice~)|0);e.doequipmentaction(self| target| 1| e.assigneddice| 0| false| false);}e.resetvar(~chargedice~);');s.set(~self~|self);s.set(~target~|target);s.set(~e~|e); var asoboh = new motion.actuators.SimpleActuator(null[;]0.01[;]null);asoboh._repeat = 1; asoboh.onRepeat(s.execute[;][self[;]target]); asoboh.move();},,,if(e.assigneddice[0] != null){e.setvar(~chargedicevalue~|e.assigneddice[0].basevalue);e.setvar(~chargediceblind~|e.assigneddice[0].blind);},,,,
Laser Vision_downgraded,[95%]CHARGES OVER TURNS|Do [sword]4 damage,dummy,epic. i made a brand new slot type.,1,attack(4);sfxdamage(target|4);sfx(~_plasma~);e.assigneddice = [null];,Plasma Gun,NORMAL,,RED,change_power,change_power,,,0,NO,NO,dummy,,,,e.countdown = 1;e.remainingcountdown = 1;if(e.gamevar.exists(~chargedicevalue~)){var mydice = new elements.Dice();mydice.basevalue = e.getvar(~chargedicevalue~);e.resetvar(~chargedicevalue~);self.dicepool.push(mydice);mydice.x = -8888;mydice.blind = e.setvar(~chargediceblind~);e.resetvar(~chargediceblind~);mydice.assigned = e;e.setvar(~chargedice~|mydice);},if(e.gamevar.exists(~chargedice~)){var s = new elements.DiceyScript('if(!e.availablethisturn # e.shockedsetting > 0 # !e.ready # e.namemodifier == ~-~){self.dicepool.remove(e.getvar(~chargedice~));} else {e.assigndice(e.getvar(~chargedice~)|0);e.doequipmentaction(self| target| 1| e.assigneddice| 0| false| false);}e.resetvar(~chargedice~);');s.set(~self~|self);s.set(~target~|target);s.set(~e~|e); var asoboh = new motion.actuators.SimpleActuator(null[;]0.01[;]null);asoboh._repeat = 1; asoboh.onRepeat(s.execute[;][self[;]target]); asoboh.move();},,,if(e.assigneddice[0] != null){e.setvar(~chargedicevalue~|e.assigneddice[0].basevalue);e.setvar(~chargediceblind~|e.assigneddice[0].blind);},,,,
